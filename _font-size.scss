/**
 * Derived from inuitcss [https://github.com/inuitcss]
 *
 * Copyright 2014 Harry Roberts
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * As per: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * Double-stranded heading hierarchy.
 */
@mixin initialize-font-size(){
  @if map-has-key($globalConfig, spacing-unit){
    $base-spacing-unit: map-get($globalConfig, spacing-unit) !global;
  } @else {
    $base-spacing-unit: base(line-height) !global;
  }
  @if map-has-key($globalConfig, line-height-ratio){
    $line-height-ratio: map-get($globalConfig, line-height-ratio) !global;
  }@else {
    $line-height-ratio: base(line-height) / base(font-size) !global;
  }

  html, body {
    font-size: base(font-size);
  }

  h1,.alpha{
      @include font-size(base(h1-size));
  }
  h2,.beta{
      @include font-size(base(h2-size));
  }
  h3,.gamma{
      @include font-size(base(h3-size));
  }
  h4,.delta{
      @include font-size(base(h4-size));
  }
  h5,.epsilon{
      @include font-size(base(h5-size));
  }
  h6,.zeta{
      @include font-size(base(h6-size));
  }

  /**
   * A series of classes for setting massive type; for use in heroes, mastheads,
   * promos, etc.
   */
  .giga{
      @include font-size(base(giga-size));
  }
  .mega{
      @include font-size(base(mega-size));
  }
  .kilo{
      @include font-size(base(kilo-size));
  }

  /**
   * A series of classes for setting tiny type; for use in smallprint etc.
   */
  .smallprint,
  .milli{
      @include font-size(base(milli-size));
  }
  .micro{
      @include font-size(base(micro-size));
  }

}

/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 */
@mixin font-size($font-size, $line-height:true){
    font-size:$font-size;
    font-size:($font-size / base(font-size))*1rem;
}

@include initialize-font-size;
