/**
 * Get base sizing/variable settings
 */
@function base($component, $value: include) {
  @if $component == breakpoints and $value != include {
    @return map-get(map-get(map-get($globalConfig, base), $component), $value);
  } @else {
    @return map-get(map-get($globalConfig, base), $component);
  }

}
/**
 * Get opt-in usage settings
 */
@function use($component, $value: include) {
    @return map-get(map-get($globalConfig, $component), $value);
}
/**
 * Get opt-in theme settings
 */
@function use-theme($component, $theme: prototype) {
	@return map-get(map-get(map-get($globalConfig, $component), theme), $theme);
}
/**
 * Get opt-in responsive settings
 */
@function use-mq($alias, $value: include) {
	@return map-get(map-get(map-get($globalConfig, mediaquery), $alias), $value);
}
/**
 * Get opt-in layout settings
 */
@function use-layout($type, $value: include) {
	@return map-get(map-get(map-get($globalConfig, layout), $type), $value);
}
/**
 * Get and optionally modify colors from color palettes.
 * Inspired by http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/
 */
@function palette($palette, $color: base, $tone: 100) {
    @if ($tone > 100) {
        $tone: $tone - 100;
        @return shade(map-get(map-get($palettes, $palette), $color), $tone);
    }
    @else {
        $tone: 100 - $tone;
        @return tint(map-get(map-get($palettes, $palette), $color), $tone);
    }

}
