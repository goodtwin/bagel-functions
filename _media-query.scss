/**
 * Derived from inuitcss [https://github.com/inuitcss]
 *
 * Copyright 2014 Harry Roberts
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 $palm-end:          base(lap-start) - 1px;
 $lap-start:         base(lap-start);
 $lap-end:           base(desk-start) - 1px;
 $desk-start:        base(desk-start);
 $desk-end:          base(desk-wide-start) - 1px;
 $desk-wide-start:   base(desk-wide-start);

 $breakpoints: (
    'palm':            'screen and (max-width: #{$palm-end})',
    'lap':             'screen and (min-width: #{$lap-start}) and (max-width: #{$lap-end})',
    'lap-and-up':      'screen and (min-width: #{$lap-start})',
    'portable':        'screen and (max-width: #{$lap-end})',
    'desk':            'screen and (min-width: #{$desk-start})',
    'desk-wide':       'screen and (min-width: #{$desk-wide-start})',
    'under-desk-wide': 'screen and (max-width: #{$desk-end})'
) !global;

@if type-of(base(breakpoints)) == map {
  $customBreakpoints: base(breakpoints);
  $breakpoints: map_merge($customBreakpoints, $breakpoints)!global;
}

/**
 * A simple mixin to quickly generate whole media queries.
 */
@mixin media-query($mq) {

    @each $alias, $condition in $breakpoints {

        @if $mq == $alias and $condition {

            @media #{$condition} {
                @content;
            }

        }

    }
}
